Function: main/0
Constants: None, 8, 1, "Fib(", ") is"
Locals: f, i, j, n, tmp
Globals: print, str
BEGIN
          LOAD_CONST                     1
          STORE_FAST                     0
          LOAD_CONST                     2
          STORE_FAST                     1
          LOAD_CONST                     2
          STORE_FAST                     2
          LOAD_CONST                     2
          STORE_FAST                     3

; Pushes the address of that first instruction after the while loop in
; the block stack. If a `break` instruction is executed, the block
; stack is popped and the PC is set to the popped instruction address.

          SETUP_LOOP               label02

; The end of the while loop jumps to `label00` to see if another
; iteration should be performed.

label00:  LOAD_FAST                      3
          LOAD_FAST                      0
          COMPARE_OP                     0

; Jumps to `label01` when the loop ends.

          POP_JUMP_IF_FALSE        label01
          LOAD_FAST                      3
          LOAD_CONST                     2
          BINARY_ADD
          STORE_FAST                     3
          LOAD_FAST                      2
          STORE_FAST                     4
          LOAD_FAST                      2
          LOAD_FAST                      1
          BINARY_ADD
          STORE_FAST                     2
          LOAD_FAST                      4
          STORE_FAST                     1

; Returns execution to the while loop condition code to check if
; another iteration of the body will be performed.

          JUMP_FORWARD             label00

; Required because `SETUP_LOOP` popped the end of the loop on the
; block stack.

label01:  POP_BLOCK

; First instruction after the loop.

label02:  LOAD_GLOBAL                    0
          LOAD_CONST                     3
          LOAD_GLOBAL                    1
          LOAD_FAST                      3
          CALL_FUNCTION                  1
          BINARY_ADD
          LOAD_CONST                     4
          BINARY_ADD
          LOAD_FAST                      1
          CALL_FUNCTION                  2
          POP_TOP
          LOAD_CONST                     0
          RETURN_VALUE
END
